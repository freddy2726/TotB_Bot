import discord
from discord import app_commands
from discord.ext import commands
import os



class Basic(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        # FÃ¼r Test-Guild
        self.guild = discord.Object(id=int(os.getenv("GUILD_ID")))

    @app_commands.command(name="ping", description="Antwortet mit pong.")
    async def ping(self, interaction: discord.Interaction):
        await interaction.response.send_message("pong")

    @app_commands.command(name="hilfe", description="Zeigt eine Ãœbersicht aller verfÃ¼gbaren Funktionen.")
    async def hilfe(self, interaction: discord.Interaction):
        help_text = (
            "â€¢ `/ping` â€“ prÃ¼ft, ob der Bot online ist.\n"
            "â€¢ `/hilfe` â€“ zeigt diese Hilfe an.\n"
            "\n"
            "ðŸ”‘ **Admin only:**\n"
            "â€¢ `/create_embed` â€“ erstellt ein Embed mit Titel, Farbe, Bild, Thumbnail.\n"
            "â€¢ `/selfroles_create` â€“ erstellt oder aktualisiert ein Panel.\n"
            "â€¢ `/selfroles_bind` â€“ bindet Emoji â†’ Rolle.\n"
            "â€¢ `/selfroles_unbind` â€“ entfernt Bindungen.\n"
            "â€¢ `/selfroles_list` â€“ zeigt aktuelle Bindungen.\n"
            "â€¢ `/selfroles_refresh` â€“ aktualisiert Panel-Embed(s).\n"
            "â€¢ `/selfroles_delete` â€“ lÃ¶scht einen Selector (Panel bleibt bestehen).\n"
            "\n"
            "ðŸ‘‹ **Welcome System:**\n"
            "Neue Mitglieder werden automatisch im Willkommens-Channel begrÃ¼ÃŸt.\n"
            )
        await interaction.response.send_message(help_text)

    async def cog_load(self):
        # Befehle beim Guild-spezifischen Command Tree registrieren
        self.bot.tree.add_command(self.ping, guild=self.guild)
        self.bot.tree.add_command(self.hilfe, guild=self.guild)

async def setup(bot: commands.Bot):
    await bot.add_cog(Basic(bot))
